Input name(s) and shape(s): 
input1 : (C,H,W) = (1, 1, 1) 
Neural Network compiler 0: 150 , name = embedding_1, output shape : (C,H,W) = (30, 1, 1) 
Neural Network compiler 1: 310 , name = embedding_1_permute_conv1d_1, output shape : (C,H,W) = (30, 1, -1) 
Neural Network compiler 2: 100 , name = conv1d_1, output shape : (C,H,W) = (64, 1, -1) 
Neural Network compiler 3: 130 , name = conv1d_1__activation__, output shape : (C,H,W) = (64, 1, -1) 
Neural Network compiler 4: 100 , name = conv1d_2, output shape : (C,H,W) = (32, 1, -1) 
Neural Network compiler 5: 130 , name = conv1d_2__activation__, output shape : (C,H,W) = (32, 1, -1) 
Neural Network compiler 6: 100 , name = conv1d_3, output shape : (C,H,W) = (16, 1, -1) 
Neural Network compiler 7: 130 , name = conv1d_3__activation__, output shape : (C,H,W) = (16, 1, -1) 
Neural Network compiler 8: 120 , name = max_pooling1d_1, output shape : (C,H,W) = (16, 1, -1) 
Neural Network compiler 9: 310 , name = max_pooling1d_1_permute_flatten_1, output shape : (C,H,W) = (16, 1, -1) 
Neural Network compiler 10: 310 , name = flatten_1__permute__, output shape : (C,H,W) = (16, -1, -1) 
Neural Network compiler 11: 301 , name = flatten_1, output shape : (C,H,W) = (-1, 1, 1) 
Neural Network compiler 12: 140 , name = dense_1, output shape : (C,H,W) = (2, 1, 1) 
Neural Network compiler 13: 175 , name = dense_1__activation__, output shape : (C,H,W) = (2, 1, 1) 